{
    "Parameters" : {
        "lambdabucket" : {
          "Type" : "String",
          "Default" : "default bucket",
          "Description" : "where lambda payload is stored"
        },
        "lambdapayload" : {
            "Type" : "String",
            "Default" : "default payload",
            "Description" : "lambda payload"
        },
        "certificatearn" : {
            "Type" : "String",
            "Default" : "certificate arn",
            "Description" : "certificate arn"
        },
        "rootdomainname" : {
            "Type" : "String",
            "Default" : "root domain name",
            "Description" : "root domain name"
        },
        "hostedzone" : {
            "Type" : "String",
            "Default" : "hosted zone",
            "Description" : "hosted zone"
        }
    },
    "Resources": {
        "SimpleChatWebSocket": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
                "Name": "SimpleChatWebSocket",
                "ProtocolType": "WEBSOCKET",
                "RouteSelectionExpression": "$request.body.message"
            }
        },
        "SendRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
                "ApiId": {
                    "Ref": "SimpleChatWebSocket"
                },
                "RouteKey": "sendmessage",
                "AuthorizationType": "NONE",
                "OperationName": "SendRoute",
                "Target": {
                    "Fn::Join": [
                        "/",
                        [
                            "integrations",
                            {
                                "Ref": "SendInteg"
                            }
                        ]
                    ]
                }
            }
        },
        "SendInteg": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
                "ApiId": {
                    "Ref": "SimpleChatWebSocket"
                },
                "Description": "Send Integration",
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SendMessageFunction.Arn}/invocations"
                }
            }
        },
        "Deployment": {
            "Type": "AWS::ApiGatewayV2::Deployment",
            "DependsOn": [
                "SendRoute"
            ],
            "Properties": {
                "ApiId": {
                    "Ref": "SimpleChatWebSocket"
                }
            }
        },
        "Stage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
                "StageName": "Prod",
                "Description": "Prod Stage",
                "DeploymentId": {
                    "Ref": "Deployment"
                },
                "ApiId": {
                    "Ref": "SimpleChatWebSocket"
                }
            }
        },
        "MyDomainName": {
            "Type": "AWS::ApiGatewayV2::DomainName",
            "Properties": {
                "DomainName": {
                    "Fn::Join": [
                        ".",
                        [
                            "api",
                            {
                                "Ref": "rootdomainname"
                            }
                        ]
                    ]
                },
                "DomainNameConfigurations": [
                    {
                        "EndpointType": "REGIONAL",
                        "CertificateArn": {
                            "Ref": "certificatearn"
                        }
                    }
                ]
            }
        },
        "SimpleChatWebSocketMapping": {
            "Type": "AWS::ApiGatewayV2::ApiMapping",
            "Properties": {
                "DomainName": {
                    "Ref": "MyDomainName"
                },
                "ApiId": {
                    "Ref": "SimpleChatWebSocket"
                },
                "Stage": {
                    "Ref": "Stage"
                }
            }
        },
        "myDNSRecord" : {
            "Type" : "AWS::Route53::RecordSet",
            "Properties" : {
               "HostedZoneId" : {
                    "Ref": "hostedzone"
                },
                "Name" : {
                    "Ref": "MyDomainName"
                },
                "AliasTarget": {
                    "DNSName" : {
                        "Fn::GetAtt": [
                            "MyDomainName",
                            "RegionalDomainName"
                        ]
                    },
                    "HostedZoneId" : {
                        "Fn::GetAtt": [
                            "MyDomainName",
                            "RegionalHostedZoneId"
                        ]
                    }
                },
                "Type" : "A"
            }
        },
        "RootRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "extrapolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": "*",
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "SendMessageFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Handler": "handler.my_handler",
                "Role": {
                    "Fn::GetAtt": [
                        "RootRole",
                        "Arn"
                    ]
                },
                "Code": {
                    "S3Bucket" : {
                        "Ref": "lambdabucket"
                    },
                    "S3Key" : {
                        "Ref": "lambdapayload"
                    }
                },
                "Layers": [
                    "arn:aws:lambda:us-east-1:553035198032:layer:git:10"
                ],
                "Runtime": "python3.7",
                "Timeout": 60
            }
        },
        "SendMessagePermission": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": [
                "SimpleChatWebSocket",
                "SendMessageFunction"
            ],
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "SendMessageFunction"
                },
                "Principal": "apigateway.amazonaws.com"
            }
        }
    }
}